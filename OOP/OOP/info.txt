OOP concepts:
	- Abstraction
	- Encapsulation
	- Inheritance
	- Polymorphism

*** Abstraction ***

- A mechanism to provide the details about essential features without decribing the background details

*** Encapsulation ***

- A mechanism of binding the object state (fields) and behavior (methods) together into a single unit
- Mainly achieved by creating classes
	- The class is a kind of a container or capsule, which encapsulate the set of fields and methods

*** Inheritance ***

- A mechanism of acquiring the features and behaviors of a class by another class
- The class whose members are inherited is called the base class, and the class that inherits thos members is called the derived class

*** Polymorphism ***

- Ability of an object to behave in multiple ways

- Two types:
	- Static (method overloading & operator overloading)
	- Dynamic (method overriding)


*** CLASS ***

- A user defined data structure that contains data members (fields, properties) and member functions (method, constructor, destructor)
- It is a reference type and acts as a template for an object

*** OBJECT ***

- A representative of the class and allocates memory to its class member (fields)


*** ACCESS MODIFIERS

	- Used to specify the accessibility of a member (field, method) or a type (class, interface)
	- Support abstraction by exposing only necessary memebers and hiding other members

	- Types:
		- Private
		- Protected
		- Internal
		- Protected Internal
		- Public

		- Check "access modifiers members accessibility" image

*** CONSTRUCTOR

	- A special type of function / method which has the same name as its class
	- Invoked automatically whenever an object of a class is created
	- Responsible for object initialization and memory allocation of its class members
	- Doesn't have a return a type, not even void type
	Supports overloading

	- TYPES:
		- Default
			- Has no parameters
			- When a class has no contructor, default construtor is served by the compiler to that class
			- Used to assign default values to instance variables of class

		- Parameterized
			- Has one or more parameters
			- Used to assign values to instance variables of class

		- Static
			- A special type of constructor that gets called before the first object of the class is created
			- Used to initialize any static field, or to perform a particular action that need to perform only once
			- Execute only once
			- A class can have only one static constructor and it must be a default constructor, having no access modifier

		- Private
			- Restrict a class external instantiation but in nested class you can create instance of this class
			- Used to implement singleton pattern i.e. a single instance for a class
			- Similar to static
			- A class can have multiple private constructors and public constructors

*** DESTRUCTOR ***

	- Special type method which has the same name as its class name preceded by a tilde (~) sign
	- Used to release unmanaged resources allocated by the object
	- Automatically called before an object is destoryed and cannot be called explictly
	- A class can have only one desctructor